name: Build and Release

on:
  release:
    types: [published]

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: linux-gnu
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive: tar.gz
          - os: linux-musl
            runner: ubuntu-latest
            target: x86_64-unknown-linux-musl
            archive: tar.gz
          - os: windows
            runner: windows-latest
            # Use the MSVC target on windows-latest for more reliable native linking
            target: x86_64-pc-windows-msvc
            archive: zip
          - os: macos
            runner: macos-latest
            target: x86_64-apple-darwin
            archive: tar.gz

    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/gh-action-rust-toolchain@stable
        with:
          toolchain: stable
          profile: minimal

      - name: Install target toolchains (linux-musl/windows)
        if: matrix.os == 'linux-musl' || matrix.os == 'linux-gnu' || matrix.os == 'windows'
        run: |
          if [ "${{ matrix.os }}" = "linux-musl" ]; then
            rustup target add x86_64-unknown-linux-musl
            sudo apt-get update && sudo apt-get install -y musl-tools clang
          fi
          if [ "${{ matrix.os }}" = "windows" ]; then
            rustup target add x86_64-pc-windows-gnu
          fi

      - name: Build
        run: |
          set -e
          if [ "${{ matrix.os }}" = "windows" ]; then
            cargo build --release --target ${{ matrix.target }}
            BIN=target/${{ matrix.target }}/release/falkordb-cli.exe
          else
            cargo build --release --target ${{ matrix.target }} || cargo build --release
            if [ -f target/${{ matrix.target }}/release/falkordb-cli ]; then
              BIN=target/${{ matrix.target }}/release/falkordb-cli
            else
              BIN=target/release/falkordb-cli
            fi
          fi

          mkdir -p release
          BASENAME=falkordb-cli-${{ github.event.release.tag_name }}-${{ matrix.target }}
          case "${{ matrix.archive }}" in
            zip)
              cp "$BIN" "release/${BASENAME}.exe"
              ;;
            tar.gz)
              cp "$BIN" "release/${BASENAME}"
              ;;
          esac

      - name: Package
        run: |
          cd release
          for f in *; do
            case "$f" in
              *.exe) zip -9 "$f.zip" "$f" && rm "$f" ;;
              *) tar -czf "$f.tar.gz" "$f" && rm "$f" ;;
            esac
          done

      - name: Generate checksums
        run: |
          cd release
          sha256sum * > SHA256SUMS.txt

      - name: Upload packaged artifacts to workflow
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}
          path: release/*

  publish:
    name: Aggregate and publish to Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Aggregate artifacts
        run: |
          set -euo pipefail
          mkdir -p release
          # Collect all packaged files
          find artifacts -type f -name '*.tar.gz' -o -name '*.zip' -print0 | xargs -0 -I{} cp {} release/
          # Recompute checksums for the aggregated artifacts to produce a single authoritative file
          cd release
          rm -f COMBINED_SHA256SUMS.txt
          for f in *; do
            sha256sum "$f" >> COMBINED_SHA256SUMS.txt
          done

      - name: Import GPG key (optional)
        if: ${{ secrets.GPG_PRIVATE_KEY != '' }}
        run: |
          set -e
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Sign checksums (optional)
        if: ${{ secrets.GPG_PRIVATE_KEY != '' }}
        run: |
          set -e
          gpg --armor --detach-sign --output COMBINED_SHA256SUMS.txt.asc COMBINED_SHA256SUMS.txt

      - name: Upload aggregated release assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
